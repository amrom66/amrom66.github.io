<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on 打工人日记</title>
    <link>https://linjinbao.github.io/tags/docker/</link>
    <description>Recent content in Docker on 打工人日记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://linjinbao.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用svn&#43;docker搭建持续集成环境</title>
      <link>https://linjinbao.github.io/2019/2019-11-09-%E4%BD%BF%E7%94%A8svn-docker%E6%90%AD%E5%BB%BA%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/2019-11-09-%E4%BD%BF%E7%94%A8svn-docker%E6%90%AD%E5%BB%BA%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83/</guid>
      <description>使用svn+docker搭建持续集成环境 功能描述： 通过使用svn+docker部署一套自动打包系统，使得项目的打包部署更加简单，只需要做一步操作： 在本地svn上面执行commit操作即可，svn服务器端收到推送后，会利用post-commit钩子将新的项目内容同步到目标路径，同时执行docker打包脚本，被docker部署脚本
准备工具  svn服务端 docker和tomcat基础镜像  实现逻辑  使用svn进行项目更新包的同步 svn hooks完成更新包和tomcat内容的同步 自动化脚本由post-commit调用；完成镜像版本的更新、镜像启动等操作  第一步：安装svn服务端，并且在本地checkout出一份，同时在服务器找个文件夹checkout一份 这一步比较简单，可以看我另一篇博客学习，地址如下：Linux SVN服务端搭建
第二步：配置svn hooks实现自动同步，将版本库中文件自动checkout到docker待打包目录 post-commit文件内容示例如下：
echo &amp;#34;#####开始提交 #####&amp;#34; &amp;gt;&amp;gt; /tmp/svn.log #svn日志 echo &amp;#34;提交时间为：&amp;#34; + `date` &amp;gt;&amp;gt;/tmp/svn.log echo &amp;#34;提交人：&amp;#34; + `whoami` &amp;gt;&amp;gt;/tmp/svn.log /usr/bin/svn update /opt/tomcat/webapps/lin --username *** --password *** --no-auth-cache # 执行docker脚本 sudo sh /opt/tomcat/webapps/lin/docker.sh #调用docker.sh脚本，完成镜像包的制作，容器的制作启动等操作 第三步： 编写docker.sh脚本 docker.sh示例： 由于虚拟机空间有限，镜像包的制作逻辑没有遵循版本号递增的规则，此处每次进行重新构建的操作，如果是服务器环境，可以选择利用版本号做区分，或者和我的注释一样，使用时间戳进行标记
#!/bin/sh # 版本号 #version=`date +%s` #version=`docker images | grep linjinbao666/svntest | awk &amp;#39;{print $2+1}&amp;#39; | awk &amp;#39;{print $1+1}&amp;#39;` #version=`docker images | grep linjinbao666/svntest|head -n -1 | awk &amp;#39;{print $2+1}&amp;#39;` cd /opt/tomcat/webapps/lin systemctl restart docker &amp;gt;&amp;gt; /tmp/docker.</description>
    </item>
    
    <item>
      <title>Docker常用操作教程</title>
      <link>https://linjinbao.github.io/2019/2019-07-05-docker/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/2019-07-05-docker/</guid>
      <description>Docker笔记 Docker安装 yum install docker -ysystemctl start docker.servicesystemctl status docker.servicesystemctl stop docker.servicesystemctl start docker.servicesystemctl restart docker.servicesystemctl status docker.service####Docker卸载 1.搜索已经安装的Docker保
yum list installed|grep dockerrpm -qa|grep docker2.分别删除安装包
yum –y remove docker.x86_643.删除docker 镜像
rm -rf /var/lib/docker部署项目 1.配置DNS
nslookup www.baidu.comvi /etc/resolv.conf# Generated by NetworkManagersearch www.tendawifi.comnameserver 119.29.29.29nameserver 182.254.116.116nslookup www.baidu.com2.配置镜像加速器
sudo mkdir -p /etc/dockersudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;{&amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://hvmf8r55.</description>
    </item>
    
    <item>
      <title>Docker常用操作教程</title>
      <link>https://linjinbao.github.io/2019/2019-07-05-docker%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%95%99%E7%A8%8B/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/2019-07-05-docker%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%95%99%E7%A8%8B/</guid>
      <description>Docker常用操作教程 Docker笔记 Docker安装 yum install docker -y systemctl start docker.service systemctl status docker.service systemctl stop docker.service systemctl start docker.service systemctl restart docker.service systemctl status docker.service Docker卸载 1.搜索已经安装的Docker保
yum list installed|grep docker rpm -qa|grep docker 2.分别删除安装包
yum –y remove docker.x86_64 3.删除docker 镜像
rm -rf /var/lib/docker 部署项目 1.配置DNS
nslookup www.baidu.com vi /etc/resolv.conf # Generated by NetworkManager search www.tendawifi.com nameserver 119.29.29.29 nameserver 182.254.116.116 nslookup www.baidu.com 2.配置镜像加速器
sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39; { &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://hvmf8r55.</description>
    </item>
    
  </channel>
</rss>