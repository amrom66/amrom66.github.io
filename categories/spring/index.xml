<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on 打工人日记</title>
    <link>https://linjinbao.github.io/categories/spring/</link>
    <description>Recent content in Spring on 打工人日记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://linjinbao.github.io/categories/spring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用工厂方法创建管理bean</title>
      <link>https://linjinbao.github.io/2019/20191108-gong-chang-fang-fa-chuang-jian-he-guan-li-bean/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/20191108-gong-chang-fang-fa-chuang-jian-he-guan-li-bean/</guid>
      <description>使用工厂方法创建管理bean 第一部分： 静态工厂   工厂类写法：
```java
  public class AirPlaneStaticFactory {
/** * 静态工厂 * @param name * @return */ public static Airplane getAirPlane(String name) { Airplane airplane = new Airplane(); airplane.setFjs(&amp;#34;副驾驶&amp;#34;); airplane.setName(name); airplane.setNum(1001001); return airplane; } }
2. xml配置注册bean ```xml &amp;lt;!-- 使用工厂管理bean-satic静态管理 --&amp;gt; &amp;lt;bean name=&amp;#34;airFactory01&amp;#34; class=&amp;#34;factory.AirPlaneStaticFactory&amp;#34; factory-method=&amp;#34;getAirPlane&amp;#34;&amp;gt; &amp;lt;constructor-arg name=&amp;#34;name&amp;#34; value=&amp;#34;和风号&amp;#34;&amp;gt;&amp;lt;/constructor-arg&amp;gt; &amp;lt;/bean&amp;gt;   ioc容器取出bean
Object object = context.getBean(&amp;#34;airFactory01&amp;#34;); //注意此处的参数，使用的是xml中工厂类注册的名   返回值是工厂类所管理的bean，即Airplane对象
第二部分： 实例工厂   工厂类写法</description>
    </item>
    
    <item>
      <title>使用工厂方法创建管理bean</title>
      <link>https://linjinbao.github.io/2019/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E5%88%9B%E5%BB%BA%E5%92%8C%E7%AE%A1%E7%90%86bean/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E5%88%9B%E5%BB%BA%E5%92%8C%E7%AE%A1%E7%90%86bean/</guid>
      <description>使用工厂方法创建管理bean 第一部分： 静态工厂  工厂类写法：  public class AirPlaneStaticFactory {/*** 静态工厂* @param name* @return*/public static Airplane getAirPlane(String name) {Airplane airplane = new Airplane();airplane.setFjs(&amp;#34;副驾驶&amp;#34;);airplane.setName(name);airplane.setNum(1001001);return airplane;}}xml配置注册bean  &amp;lt;!--使用工厂管理bean-satic静态管理 --&amp;gt;&amp;lt;bean name=&amp;#34;airFactory01&amp;#34; class=&amp;#34;factory.AirPlaneStaticFactory&amp;#34; factory-method=&amp;#34;getAirPlane&amp;#34;&amp;gt;&amp;lt;constructor-arg name=&amp;#34;name&amp;#34; value=&amp;#34;和风号&amp;#34;&amp;gt;&amp;lt;/constructor-arg&amp;gt;&amp;lt;/bean&amp;gt;ioc容器取出bean  Object object = context.getBean(&amp;#34;airFactory01&amp;#34;); //注意此处的参数，使用的是xml中工厂类注册的名返回值是工厂类所管理的bean，即Airplane对象
第二部分： 实例工厂  工厂类写法  public class AirPlaneInstanceFactory {/*** 实例工厂* @param name* @return*/public Airplane getAirPlane(String name) {Airplane airplane = new Airplane();airplane.</description>
    </item>
    
  </channel>
</rss>