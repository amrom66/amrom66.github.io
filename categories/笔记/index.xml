<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>笔记 on 打工人日记</title>
    <link>https://linjinbao.github.io/categories/%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 笔记 on 打工人日记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://linjinbao.github.io/categories/%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JAVA并发编程实战-笔记</title>
      <link>https://linjinbao.github.io/2019/20191014java-bing-fa-bian-cheng-shi-zhan-bi-ji/</link>
      <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/20191014java-bing-fa-bian-cheng-shi-zhan-bi-ji/</guid>
      <description>JAVA并发编程实战-笔记 Volatile变量
 同步的弱形式 该变量不会被缓存 不加锁 不会导致阻塞 可以修饰变量，不能修饰方法 只能保证可见性，不能保证原子性  线程封闭 访问共享的、可变的数据要求使用同步，一个可以避免同步的方法就是不共享数据。
 Ad-hoc线程限制 栈限制 ThreadLocal 不可变性   第二部分-构建并发应用 </description>
    </item>
    
    <item>
      <title>JAVA并发编程实战-笔记</title>
      <link>https://linjinbao.github.io/2019/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98-%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98-%E7%AC%94%E8%AE%B0/</guid>
      <description>JAVA并发编程实战-笔记 Volatile变量
 同步的弱形式 该变量不会被缓存 不加锁 不会导致阻塞 可以修饰变量，不能修饰方法 只能保证可见性，不能保证原子性  线程封闭 访问共享的、可变的数据要求使用同步，一个可以避免同步的方法就是不共享数据。
 Ad-hoc线程限制 栈限制 ThreadLocal 不可变性   第二部分-构建并发应用 </description>
    </item>
    
    <item>
      <title>webpack学习</title>
      <link>https://linjinbao.github.io/2019/20191010webpack-xue-xi/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/20191010webpack-xue-xi/</guid>
      <description>webpack学习 安装 //全局安装 npm install -g webpack npm install -g webpack-cli npm install --save lodash //安装到你的项目目录 npm install --save-dev webpack 创建package.json文件 npm init 创建目录结构 webpack-demo |- /dist |- index.html |- /src |- index.js |- package.json src/index.js
function component() { var element = document.createElement(&amp;#39;div&amp;#39;); // Lodash（目前通过一个 script 脚本引入）对于执行这一行是必需的 element.innerHTML = _.join([&amp;#39;Hello&amp;#39;, &amp;#39;webpack&amp;#39;], &amp;#39; &amp;#39;); return element; } document.body.appendChild(component()); dist/index.html
&amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;起步&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;#34;https://unpkg.com/lodash@4.16.6&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script src=&amp;#34;./src/index.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; package.</description>
    </item>
    
    <item>
      <title>webpack学习</title>
      <link>https://linjinbao.github.io/2019/webpack%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/webpack%E5%AD%A6%E4%B9%A0/</guid>
      <description>webpack学习 安装 //全局安装npm install -g webpacknpm install -g webpack-clinpm install --save lodash//安装到你的项目目录npm install --save-dev webpack创建package.json文件 npm init创建目录结构 webpack-demo|- /dist|- index.html|- /src|- index.js|- package.jsonsrc/index.js
function component() {var element = document.createElement(&#39;div&#39;);// Lodash（目前通过一个 script 脚本引入）对于执行这一行是必需的element.innerHTML = _.join([&#39;Hello&#39;, &#39;webpack&#39;], &#39; &#39;);return element;}document.body.appendChild(component());dist/index.html
&amp;lt;!doctype html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;起步&amp;lt;/title&amp;gt;&amp;lt;script src=&amp;quot;https://unpkg.com/lodash@4.16.6&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;script src=&amp;quot;./src/index.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;package.</description>
    </item>
    
    <item>
      <title>React学习笔记</title>
      <link>https://linjinbao.github.io/2019/20190928react-xue-xi/</link>
      <pubDate>Sat, 28 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/20190928react-xue-xi/</guid>
      <description>React学习 JSF语法概述 const element = &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;; 这个有趣的标签语法既不是字符串也不是 HTML。
它被称为 JSX，是一个 JavaScript 的语法扩展。我们建议在 React 中配合使用 JSX，JSX 可以很好地描述 UI 应该呈现出它应有交互的本质形式。JSX 可能会使人联想到模版语言，但它具有 JavaScript 的全部功能。
实例
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;utf-8&amp;quot; /&amp;gt; &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;quot;https://cdn.staticfile.org/react/16.4.0/umd/react.development.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;https://cdn.staticfile.org/react-dom/16.4.0/umd/react-dom.development.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;!-- 生产环境中不建议使用 --&amp;gt; &amp;lt;script src=&amp;quot;https://cdn.staticfile.org/babel-standalone/6.26.0/babel.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script type=&amp;quot;text/babel&amp;quot;&amp;gt; const name = &#39;linjinbao666&#39;; const element = &amp;lt;h1&amp;gt;hello, {name}&amp;lt;/h1&amp;gt; ReactDOM.render( element, document.getElementById(&#39;root&#39;) ); &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 元素 元素是构成React应用的最小砖块
元素的渲染： const element = &amp;lt;h1&amp;gt;Hello, world&amp;lt;/h1&amp;gt;; ReactDOM.</description>
    </item>
    
    <item>
      <title>React学习笔记</title>
      <link>https://linjinbao.github.io/2019/react%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Sat, 28 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/react%E5%AD%A6%E4%B9%A0/</guid>
      <description>React学习 JSF语法概述 const element = &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;; 这个有趣的标签语法既不是字符串也不是 HTML。
它被称为 JSX，是一个 JavaScript 的语法扩展。我们建议在 React 中配合使用 JSX，JSX 可以很好地描述 UI 应该呈现出它应有交互的本质形式。JSX 可能会使人联想到模版语言，但它具有 JavaScript 的全部功能。
实例
&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;meta charset=&amp;#34;utf-8&amp;#34; /&amp;gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&amp;lt;script src=&amp;#34;https://cdn.staticfile.org/react/16.4.0/umd/react.development.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&amp;#34;https://cdn.staticfile.org/react-dom/16.4.0/umd/react-dom.development.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;!--生产环境中不建议使用 --&amp;gt;&amp;lt;script src=&amp;#34;https://cdn.staticfile.org/babel-standalone/6.26.0/babel.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;div id=&amp;#34;root&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;script type=&amp;#34;text/babel&amp;#34;&amp;gt;const name = &amp;#39;linjinbao666&amp;#39;;const element = &amp;lt;h1&amp;gt;hello, {name}&amp;lt;/h1&amp;gt; ReactDOM.render(element,document.getElementById(&amp;#39;root&amp;#39;));&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;元素 元素是构成React应用的最小砖块
元素的渲染： const element = &amp;lt;h1&amp;gt;Hello, world&amp;lt;/h1&amp;gt;; ReactDOM.render(element, document.</description>
    </item>
    
    <item>
      <title>MYSQL操作笔记</title>
      <link>https://linjinbao.github.io/2019/2019-09-27-mysql%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/2019-09-27-mysql%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</guid>
      <description>MYSQL操作笔记 修改用户密码 [官方链接]（https://dev.mysql.com/doc/mysql-windows-excerpt/5.7/en/resetting-permissions-windows.html） 方法一（老版本）：使用set password命令 格式`mysql&amp;gt; set password for username@loclhost=password(&amp;lsquo;passwd&amp;rsquo;);
mysql&amp;gt; set password = password(&amp;#39;Gepoint&amp;#39;); Query OK, 0 rows affected (0.36 sec) 方法二：使用alter命令
alter user &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;123321&amp;#39;; 方法三：修改user表
UPDATE mysql.user SET authentication_string = PASSWORD(&amp;#39;MyNewPass&amp;#39;), password_expired = &amp;#39;N&amp;#39; WHERE User = &amp;#39;root&amp;#39; AND Host = &amp;#39;localhost&amp;#39;; FLUSH PRIVILEGES; 定时任务   打开定时器
-- 开启event  SET GLOBAL event_scheduler=&amp;#39;ON&amp;#39;; -- 查看定时器  SHOW VARIABLES LIKE &amp;#39;event_scheduler&amp;#39;;   写存储过程供定时任务调用
```sql</description>
    </item>
    
    <item>
      <title>MYSQL操作笔记</title>
      <link>https://linjinbao.github.io/2019/mysql%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://linjinbao.github.io/2019/mysql%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</guid>
      <description>MYSQL操作笔记 修改用户密码 [官方链接]（https://dev.mysql.com/doc/mysql-windows-excerpt/5.7/en/resetting-permissions-windows.html） 方法一（老版本）：使用set password命令 格式`mysql&amp;gt; set password for username@loclhost=password(&amp;lsquo;passwd&amp;rsquo;);
mysql&amp;gt; set password = password(&amp;#39;Gepoint&amp;#39;);Query OK, 0 rows affected (0.36 sec)方法二：使用alter命令
alter user &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;123321&amp;#39;;方法三：修改user表
UPDATE mysql.userSET authentication_string = PASSWORD(&amp;#39;MyNewPass&amp;#39;), password_expired = &amp;#39;N&amp;#39;WHERE User = &amp;#39;root&amp;#39; AND Host = &amp;#39;localhost&amp;#39;;FLUSH PRIVILEGES;定时任务  打开定时器  -- 开启event SET GLOBAL event_scheduler=&amp;#39;ON&amp;#39;;-- 查看定时器 SHOW VARIABLES LIKE &amp;#39;event_scheduler&amp;#39;;写存储过程供定时任务调用  DELIMITER $$ DROP PROCEDURE IF EXISTS backup_procedure $$ CREATE PROCEDURE backup_procedure()BEGINDECLARE t_error INTEGER DEFAULT 0;DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET t_error=1;START TRANSACTION;SELECT * FROM `user` INTO OUTFILE &amp;#39;f:backda.</description>
    </item>
    
  </channel>
</rss>